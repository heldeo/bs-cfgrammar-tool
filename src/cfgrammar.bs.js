// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Types = require("cfgrammar-tool/types");

function rule(name, production) {
  return new Types.Rule(name, production);
}

function compare_rule(obj1, obj2) {
  return obj1.equals(obj2);
}

function sym(t, d) {
  return new Types.Sym(t, d);
}

function compare_sym(obj1, obj2) {
  return obj1.equals(obj2);
}

function sym$1(t, d) {
  return new Types.Sym(t, d);
}

function nt(d) {
  return new Types.Sym("NT", d);
}

function t(d) {
  return new Types.Sym("T", d);
}

function rule$1(n, p) {
  return new Types.Rule(n, p);
}

var Types$1 = {
  sym: sym$1,
  nt: nt,
  t: t,
  rule: rule$1
};

function types(param) {
  return /* Types */0;
}

var Cfgrammar = {
  types: types
};

exports.rule = rule;
exports.compare_rule = compare_rule;
exports.sym = sym;
exports.compare_sym = compare_sym;
exports.Types = Types$1;
exports.Cfgrammar = Cfgrammar;
/* cfgrammar-tool/types Not a pure module */
